{"version":3,"sources":["mybase.js","components/AuthForm.js","routes/Auth.js","components/Jweet.js","components/JweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["auth","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","storage","getStorage","AuthForm","useState","email","password","info","setInfo","error","setError","newAccount","setNewAccount","onChange","e","type","cp","target","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","placeholder","required","onClick","prev","Auth","onSocialClick","name","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","GithubAuthProvider","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","widwth","height","alt","JweetFactory","userObj","jweet","setJweet","attachment","setAttachment","alert","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","_jweet","createdAt","Date","now","creatorId","addDoc","collection","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","width","Home","jweets","setJweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","getMyJweets","q","where","getDocs","forEach","signOut","push","Navigation","to","AppRouter","props","isLoggedIn","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba0af80b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n\tappId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst firebase = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\nexport const storage = getStorage();\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tcreateUserWithEmailAndPassword,\r\n\tsignInWithEmailAndPassword,\r\n\tGoogleAuthProvider,\r\n\tGithubAuthProvider,\r\n\tsignInWithPopup,\r\n} from \"firebase/auth\";\r\nimport { app, auth } from \"mybase\";\r\n\r\nconst AuthForm = () => {\r\n\tconst [info, setInfo] = useState({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [newAccount, setNewAccount] = useState(true);\r\n\r\n\tconst toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\tconst onChange = (e, type) => {\r\n\t\tconst cp = { ...info };\r\n\t\tcp[type] = e.target.value;\r\n\t\tsetInfo(cp);\r\n\t};\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tlet data;\r\n\t\t\tif (newAccount) {\r\n\t\t\t\t// create account\r\n\t\t\t\tdata = await createUserWithEmailAndPassword(\r\n\t\t\t\t\tauth,\r\n\t\t\t\t\tinfo.email,\r\n\t\t\t\t\tinfo.password\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Log In\r\n\t\t\t\tdata = await signInWithEmailAndPassword(\r\n\t\t\t\t\tauth,\r\n\t\t\t\t\tinfo.email,\r\n\t\t\t\t\tinfo.password\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={info.email}\r\n\t\t\t\t\tonChange={(e) => onChange(e, \"email\")}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={info.password}\r\n\t\t\t\t\tonChange={(e) => onChange(e, \"password\")}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n\t\t\t\t{error}\r\n\t\t\t</form>\r\n\t\t\t<span onClick={toggleAccount}>\r\n\t\t\t\t{newAccount ? \"Log in\" : \"Create Account\"}\r\n\t\t\t</span>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { app, auth } from \"mybase\";\r\nimport {\r\n\tcreateUserWithEmailAndPassword,\r\n\tsignInWithEmailAndPassword,\r\n\tGoogleAuthProvider,\r\n\tGithubAuthProvider,\r\n\tsignInWithPopup,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\tconst onSocialClick = async (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tlet provider;\r\n\t\tlet user;\r\n\t\tconsole.log(name);\r\n\t\tif (name === \"google\") {\r\n\t\t\tprovider = new GoogleAuthProvider();\r\n\t\t\t// provider = new Github.\r\n\t\t\tsignInWithPopup(auth, provider)\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\r\n\t\t\t\t\tconst token = credential.accessToken;\r\n\t\t\t\t\tuser = result.user;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t} else if (name === \"github\") {\r\n\t\t\tprovider = new GithubAuthProvider();\r\n\t\t\tsignInWithPopup(auth, provider)\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tconst credential = GithubAuthProvider.credentialFromResult(result);\r\n\t\t\t\t\tconst token = credential.accessToken;\r\n\t\t\t\t\tuser = result.user;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AuthForm />\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={onSocialClick} name=\"google\">\r\n\t\t\t\t\tContinue with Google\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={onSocialClick} name=\"github\">\r\n\t\t\t\t\tContinue with Github\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { db, storage } from \"mybase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\n\r\nconst Jweet = ({ jweetObj, isOwner }) => {\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [newJweet, setNewJweet] = useState(jweetObj.text);\r\n\tconst onDeleteClick = async () => {\r\n\t\tconst ok = window.confirm(\"Are you sure you want to delete this jweet?\");\r\n\t\tif (ok) {\r\n\t\t\tawait deleteDoc(doc(db, \"jweets\", jweetObj.id));\r\n\t\t\tif (jweetObj.attachmentUrl !== \"\")\r\n\t\t\t\tawait deleteObject(ref(storage, jweetObj.attachmentUrl));\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleEditing = () => {\r\n\t\tsetEditing((prev) => !prev);\r\n\t};\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(jweetObj, newJweet);\r\n\t\tawait updateDoc(doc(db, \"jweets\", jweetObj.id), {\r\n\t\t\ttext: newJweet,\r\n\t\t});\r\n\t\tsetEditing(false);\r\n\t};\r\n\tconst onChange = (e) => {\r\n\t\tsetNewJweet(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{editing ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tplaceholder=\"Edit your Jweet\"\r\n\t\t\t\t\t\t\tvalue={newJweet}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Update Jweet\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<button onClick={toggleEditing}>Cancel</button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>{jweetObj.text}</h4>\r\n\t\t\t\t\t{jweetObj.attachmentUrl && (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={jweetObj.attachmentUrl}\r\n\t\t\t\t\t\t\twidwth=\"50px\"\r\n\t\t\t\t\t\t\theight=\"50px\"\r\n\t\t\t\t\t\t\talt=\"attachmentUrl\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{isOwner && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button onClick={onDeleteClick}>Delete Jweet</button>\r\n\t\t\t\t\t\t\t<button onClick={toggleEditing}>Edit Jweet</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Jweet;\r\n","import { addDoc, collection } from \"firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\r\nimport { db, storage } from \"mybase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst JweetFactory = ({ userObj }) => {\r\n\tconst [jweet, setJweet] = useState(\"\");\r\n\tconst [attachment, setAttachment] = useState(\"\");\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet attachmentUrl = \"\";\r\n\r\n\t\tconst text = jweet;\r\n\t\tif (text === \"\") {\r\n\t\t\talert(\"글자를 입력해주세요\");\r\n\t\t} else {\r\n\t\t\tif (attachment !== \"\") {\r\n\t\t\t\tconst attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n\t\t\t\tconst response = await uploadString(\r\n\t\t\t\t\tattachmentRef,\r\n\t\t\t\t\tattachment,\r\n\t\t\t\t\t\"data_url\"\r\n\t\t\t\t);\r\n\t\t\t\tattachmentUrl = await getDownloadURL(response.ref);\r\n\t\t\t}\r\n\t\t\tconst _jweet = {\r\n\t\t\t\ttext: text,\r\n\t\t\t\tcreatedAt: Date.now(),\r\n\t\t\t\tcreatorId: userObj.uid,\r\n\t\t\t\tattachmentUrl,\r\n\t\t\t};\r\n\t\t\tsetJweet(\"\");\r\n\t\t\tsetAttachment(\"\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait addDoc(collection(db, \"jweets\"), _jweet);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst onChange = (e) => {\r\n\t\tsetJweet(e.target.value);\r\n\t};\r\n\r\n\tconst onFileChange = (e) => {\r\n\t\tconst theFile = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = (finishedEvent) => {\r\n\t\t\tsetAttachment(finishedEvent.currentTarget.result);\r\n\t\t};\r\n\t\treader.readAsDataURL(theFile);\r\n\t};\r\n\tconst clearAttachment = () => {\r\n\t\tsetAttachment(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={jweet}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tplaceholder=\"What's on your mind?\"\r\n\t\t\t\tmaxLength={120}\r\n\t\t\t/>\r\n\t\t\t<input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n\t\t\t<input type=\"submit\" value=\"Jweet\" />\r\n\t\t\t{attachment && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={attachment} width=\"50px\" height=\"50px\" alt=\"preview\" />\r\n\t\t\t\t\t<button onClick={clearAttachment}>Clear</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default JweetFactory;\r\n","import Jweet from \"components/Jweet\";\r\nimport JweetFactory from \"components/JweetFactory\";\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { db } from \"mybase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\tconst [jweets, setJweets] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tonSnapshot(\r\n\t\t\tquery(collection(db, \"jweets\"), orderBy(\"createdAt\", \"desc\")),\r\n\t\t\t(snapshot) => {\r\n\t\t\t\tconst nweetArray = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t}));\r\n\t\t\t\tsetJweets(nweetArray);\r\n\t\t\t}\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<JweetFactory userObj={userObj} />\r\n\t\t\t<div>\r\n\t\t\t\t{jweets.map((jweet) => (\r\n\t\t\t\t\t<Jweet\r\n\t\t\t\t\t\tkey={jweet.id}\r\n\t\t\t\t\t\tjweetObj={jweet}\r\n\t\t\t\t\t\tisOwner={jweet.creatorId === userObj.uid}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { auth, db } from \"mybase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\nimport { getDocs, query, collection, where } from \"firebase/firestore\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n\tconst history = useHistory();\r\n\tconst [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n\tconst onLogOutClick = () => {\r\n\t\tauth.signOut();\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\tconst onChange = (e) => {\r\n\t\tsetNewDisplayName(e.target.value);\r\n\t};\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (userObj.displayName !== newDisplayName) {\r\n\t\t\tconsole.log(userObj.updateProfile);\r\n\r\n\t\t\tawait updateProfile(await auth.currentUser, {\r\n\t\t\t\tdisplayName: newDisplayName,\r\n\t\t\t});\r\n\t\t\trefreshUser();\r\n\t\t}\r\n\t};\r\n\r\n\tconst getMyJweets = async () => {\r\n\t\tconst q = query(\r\n\t\t\tcollection(db, \"jweets\"),\r\n\t\t\twhere(\"creatorId\", \"==\", userObj.uid)\r\n\t\t);\r\n\t\tconst querySnapshot = await getDocs(q);\r\n\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\tconsole.log(doc.id, \" => \", doc.data());\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetMyJweets();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={newDisplayName}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tplaceholder=\"Display name\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value=\"Update Profile\" />\r\n\t\t\t</form>\r\n\t\t\t<button onClick={onLogOutClick}>Log Out</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/profile\">\r\n\t\t\t\t\t\t{userObj.displayName ? userObj.displayName : \"\"}의 Profile\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tHashRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\tRedirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst AppRouter = (props) => {\r\n\tconst isLoggedIn = props.isLoggedIn;\r\n\tconst userObj = props.userObj;\r\n\tconst refreshUser = props.refreshUser;\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{isLoggedIn && <Navigation userObj={userObj} />}\r\n\t\t\t<Switch>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Home userObj={userObj} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/profile\">\r\n\t\t\t\t\t\t\t<Profile refreshUser={refreshUser} userObj={userObj} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Auth />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { auth } from \"mybase\";\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [isLoggedIn, setIsLoggedIn] = useState(auth.currentUser);\n\tconst [userObj, setUserObj] = useState(null);\n\n\tconst refreshUser = () => {\n\t\tconst user = auth.currentUser;\n\t\tsetUserObj({\n\t\t\tdisplayName: user.displayName,\n\t\t\tuid: user.uid,\n\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\tsetUserObj({\n\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{init ? (\n\t\t\t\t<AppRouter\n\t\t\t\t\trefreshUser={refreshUser}\n\t\t\t\t\tisLoggedIn={isLoggedIn}\n\t\t\t\t\tuserObj={userObj}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\"Initializing...\"\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"./mybase\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}